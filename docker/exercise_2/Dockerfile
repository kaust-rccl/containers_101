# change this into latest
FROM ubuntu:focal

RUN apt-get update

# install vim, git and wget using apt-get
RUN apt-get install -y vim git wget

# Download miniconda installation file
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

# set a ARG to direct to the miniconda installation file
ARG CONDA_HOME=/software/miniconda3

# install miniconda in user's miniconda3 directory
RUN bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_HOME

# define environment path
ENV PATH=$PATH:${CONDA_HOME}/condabin:${CONDA_HOME}/bin

# copy packages folder to container this is recomended for small files 
COPY packages packages

# update conda
RUN conda update --name base --channel defaults --yes conda

# install mamba in the base environment
RUN conda install --name base --channel conda-forge mamba --yes

########## install packages in base environment ##########

# install packages from environment.yml that contains jupyter lab
RUN mamba env update -f packages/environment.yml


# remove packages folder and miniconda installation file
RUN rm -rf packages
RUN rm Miniconda3-latest-Linux-x86_64.sh

# Create a directory for the data
RUN mkdir /home//data

# using WORKDIR is preferred to using 'RUN cd /some/path'
WORKDIR /home/data

# create a file in the data directory
RUN echo "Hello from Volume" > test

# create a volume for the data directory 
# VOLUME is volumes are the preferred mechanism for persisting data generated by and used by Docker containers
VOLUME /home/data

# activate conda base environment
SHELL ["/bin/bash","-c"]
RUN conda init

# Expose port 8888 for jupyter lab
EXPOSE 8888

#### optional: add jupyter lab to startup ####
# this is the entrypoint for the container and will be executed on startup
# ENTRYPOINT ["jupyter", "lab", "--no-browser","--ip=0.0.0.0","--NotebookApp.token=''","--NotebookApp.password=''"]
